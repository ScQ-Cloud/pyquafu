
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "mainleft+-left*/right^rightUMINUSASSIGN BARRIER CHANNEL CREG FLOAT GATE ID IF INCLUDE INT MATCHES MEASURE NONE OPAQUE OPENQASM PI QREG RESET STRING UNIT\n        main : program\n        \n        program : statement\n        \n        program : program statement\n        \n        statement : OPENQASM FLOAT ';'\n                    | OPENQASM FLOAT error\n                    | OPENQASM error\n        \n        statement : qop ';'\n                | qop error\n                | qif ';'\n                | qif error\n        \n        statement : ';'\n        \n        qif : IF '(' primary MATCHES INT ')' qop \n            | IF '(' primary MATCHES INT error\n            | IF '(' primary MATCHES error\n            | IF '(' primary error\n            | IF '(' error\n            | IF error\n        \n        qop : id primary_list\n            | id '(' ')' primary_list \n            | id '(' expression_list ')' primary_list\n        \n        qop : id '(' ')' error \n            | id '(' error\n            | id '(' expression_list ')' error\n            | id '(' expression_list error\n        \n        qop : MEASURE primary ASSIGN primary\n        \n        qop : MEASURE primary ASSIGN error\n            | MEASURE primary error\n            | MEASURE error\n        \n        qop : BARRIER primary_list\n        \n        qop : BARRIER error\n        \n        qop : RESET primary\n        \n        qop : RESET error\n        \n        qarg_list : id\n        \n        qarg_list : qarg_list ',' id\n        \n        carg_list : id\n        \n        carg_list : carg_list ',' id\n        \n        statement : GATE id gate_scope qarg_list gate_body \n                | GATE error \n                | GATE id gate_scope error\n                | GATE id gate_scope qarg_list error\n        \n        statement : GATE id gate_scope '(' ')' qarg_list gate_body \n                | GATE id gate_scope '(' error\n                | GATE id gate_scope '(' ')' error\n                | GATE id gate_scope '(' ')' qarg_list error\n        \n        statement : GATE id gate_scope '(' carg_list ')' qarg_list gate_body\n                | GATE id gate_scope '(' carg_list ')' qarg_list error\n                | GATE id gate_scope '(' carg_list ')' error\n                | GATE id gate_scope '(' carg_list error\n        \n        gate_scope : \n        \n        gate_body : '{' gate_scope '}'\n                    | '{' gate_scope error\n        \n        gate_body : '{' gop_list gate_scope '}'\n                    | '{' gop_list gate_scope error\n        \n        gop_list : gop\n        \n        gop_list : gop_list gop\n        \n        gop : id id_list ';'\n            | id id_list error\n            | id '(' ')' id_list ';'\n            | id '(' ')' id_list error\n            | id '(' ')' error\n            | id '(' error\n        \n        gop : id '(' expression_list ')' id_list ';'\n            | id '(' expression_list ')' id_list error\n            | id '(' expression_list ')' error\n            | id '(' expression_list error\n        \n        gop : BARRIER id_list ';'\n            | BARRIER id_list error\n            | BARRIER error\n        \n        statement : qdecl ';'\n                    | cdecl ';'\n                    | qdecl error\n                    | cdecl error\n                    | error\n        \n        qdecl : QREG indexed_id\n                | QREG error\n        \n        cdecl : CREG indexed_id\n                | CREG error\n        \n        id : ID\n            | error\n        \n        indexed_id : id '[' INT ']'\n                    | id '[' INT error\n                    | id '[' error\n        \n        primary : id\n                | indexed_id\n        \n        primary_list : primary\n                     | primary_list ',' primary\n        \n        id_list : id\n        \n        id_list : id_list ',' id\n        \n        unary : INT\n        \n        unary : FLOAT\n        \n        unary : PI\n        \n        unary : id\n        \n        expression : expression '*' expression\n                    | expression '/' expression\n                    | expression '+' expression\n                    | expression '-' expression\n                    | expression '^' expression\n        \n        expression : - expression %prec UMINUS\n        \n        expression : unary\n        \n        expression : '(' expression ')'\n        \n        expression : id '(' expression ')'\n        \n        expression_list : expression\n        \n        expression_list : expression_list ',' expression\n        \n        ignore : STRING\n        \n        empty :\n        "
    
_lr_action_items = {'OPENQASM':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,132,133,141,142,144,147,148,157,158,],[4,4,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),';':([0,2,3,5,6,7,8,11,12,19,20,21,22,23,24,25,26,28,29,30,32,33,34,35,36,37,38,40,41,42,43,44,46,47,48,50,51,52,53,61,69,71,74,77,78,81,82,84,92,93,95,96,97,102,104,105,108,109,117,125,127,131,132,133,136,137,139,140,141,142,144,146,147,148,157,158,159,160,161,166,167,],[5,5,-2,-11,-73,23,25,35,37,-78,-3,52,-6,-7,-8,-9,-10,-38,-83,-18,-79,-85,-84,-69,-71,-70,-72,-28,-29,-30,-31,-32,-17,-74,-75,-76,-77,-4,-5,-22,-27,-16,-39,-82,-86,-19,-21,-24,-25,-26,-15,-37,-40,-42,-80,-81,-20,-23,-14,-43,-48,-13,-50,-51,-87,149,155,-79,-41,-44,-47,-12,-52,-53,-45,-46,-88,164,-79,168,-79,]),'GATE':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,132,133,141,142,144,147,148,157,158,],[9,9,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'error':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,],[6,6,-2,22,-11,-73,24,26,28,32,36,38,40,42,44,46,48,51,-78,-3,53,-6,-7,-8,-9,-10,-49,-38,-83,-18,61,-79,-85,-84,-69,-71,-70,-72,69,-28,-29,-30,-31,-32,71,-17,-74,-75,-76,-77,-4,-5,74,77,32,-92,32,82,84,-22,-102,32,-99,-89,-90,-91,93,-27,95,-16,-33,97,-39,102,105,-82,-86,32,-19,-21,109,-24,32,32,32,32,32,32,-98,-25,-26,117,-15,-37,-40,32,32,-35,125,-42,127,-80,-81,-100,-20,-23,-103,-93,-94,-95,-96,-97,131,-14,-34,133,32,-54,32,140,142,-43,144,-48,32,-101,32,-13,-50,-51,148,-55,-87,150,153,156,-68,-41,-44,158,-47,-36,-12,-52,-53,-56,-57,32,161,-61,163,-66,-67,-45,-46,-88,165,-60,167,-65,-58,-59,169,-64,-62,-63,]),'MEASURE':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,130,132,133,141,142,144,147,148,157,158,],[13,13,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,13,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'BARRIER':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,99,102,120,121,125,127,130,132,133,135,140,141,142,144,147,148,149,150,153,155,156,157,158,161,163,164,165,167,168,169,],[14,14,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,123,-42,123,-54,-43,-48,14,-50,-51,-55,-68,-41,-44,-47,-52,-53,-56,-57,-61,-66,-67,-45,-46,-60,-65,-58,-59,-64,-62,-63,]),'RESET':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,130,132,133,141,142,144,147,148,157,158,],[15,15,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,15,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'IF':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,132,133,141,142,144,147,148,157,158,],[16,16,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'QREG':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,132,133,141,142,144,147,148,157,158,],[17,17,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'CREG':([0,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,132,133,141,142,144,147,148,157,158,],[18,18,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'ID':([0,2,3,5,6,9,10,13,14,15,17,18,19,20,22,23,24,25,26,27,28,31,32,35,36,37,38,45,52,53,54,56,58,59,63,68,74,75,79,83,85,86,87,88,89,90,96,97,98,99,101,102,120,121,122,123,125,126,127,128,130,132,133,135,138,140,141,142,144,147,148,149,150,151,152,153,155,156,157,158,161,162,163,164,165,167,168,169,],[19,19,-2,-11,-73,19,19,19,19,19,19,19,-78,-3,-6,-7,-8,-9,-10,-49,-38,19,-79,-69,-71,-70,-72,19,-4,-5,19,19,19,19,19,19,-39,19,19,19,19,19,19,19,19,19,-37,-40,19,19,19,-42,19,-54,19,19,-43,19,-48,19,19,-50,-51,-55,19,-68,-41,-44,-47,-52,-53,-56,-57,19,19,-61,-66,-67,-45,-46,-60,19,-65,-58,-59,-64,-62,-63,]),'$end':([1,2,3,5,6,20,22,23,24,25,26,28,35,36,37,38,52,53,74,96,97,102,125,127,132,133,141,142,144,147,148,157,158,],[0,-1,-2,-11,-73,-3,-6,-7,-8,-9,-10,-38,-69,-71,-70,-72,-4,-5,-39,-37,-40,-42,-43,-48,-50,-51,-41,-44,-47,-52,-53,-45,-46,]),'FLOAT':([4,31,58,63,79,85,86,87,88,89,90,138,],[21,66,66,66,66,66,66,66,66,66,66,66,]),'(':([6,10,16,19,27,28,31,32,54,57,58,61,63,79,85,86,87,88,89,90,122,138,153,],[-79,31,45,-78,-49,-79,58,-79,75,79,58,-79,58,58,58,58,58,58,58,58,138,58,-79,]),'[':([19,29,32,40,42,44,48,49,51,71,82,93,109,],[-78,55,-79,-79,-79,-79,-79,55,-79,-79,-79,-79,-79,]),',':([19,29,30,32,33,34,41,42,57,60,61,62,64,65,66,67,72,73,74,77,78,81,82,91,100,102,103,104,105,107,108,109,110,111,112,113,114,115,118,124,125,129,136,137,139,140,143,144,145,153,154,159,160,161,166,167,],[-78,-83,56,-79,-85,-84,56,-79,-92,85,-79,-102,-99,-89,-90,-91,-33,98,-79,-82,-86,56,-79,-98,-35,-79,128,-80,-81,-100,56,-79,-103,-93,-94,-95,-96,-97,-34,98,-79,-101,-87,151,151,-79,98,-79,-36,-79,85,-88,151,-79,151,-79,]),'ASSIGN':([19,29,34,39,40,77,104,105,],[-78,-83,-84,68,-79,-82,-80,-81,]),'*':([19,32,57,61,62,64,65,66,67,80,91,106,107,110,111,112,113,114,115,129,153,],[-78,-79,-92,-79,86,-99,-89,-90,-91,86,-98,86,-100,86,-93,-94,86,86,-97,-101,-79,]),'/':([19,32,57,61,62,64,65,66,67,80,91,106,107,110,111,112,113,114,115,129,153,],[-78,-79,-92,-79,87,-99,-89,-90,-91,87,-98,87,-100,87,-93,-94,87,87,-97,-101,-79,]),'+':([19,32,57,61,62,64,65,66,67,80,91,106,107,110,111,112,113,114,115,129,153,],[-78,-79,-92,-79,88,-99,-89,-90,-91,88,-98,88,-100,88,-93,-94,-95,-96,-97,-101,-79,]),'-':([19,31,32,57,58,61,62,63,64,65,66,67,79,80,85,86,87,88,89,90,91,106,107,110,111,112,113,114,115,129,138,153,],[-78,63,-79,-92,63,-79,89,63,-99,-89,-90,-91,63,89,63,63,63,63,63,63,-98,89,-100,89,-93,-94,-95,-96,-97,-101,63,-79,]),'^':([19,32,57,61,62,64,65,66,67,80,91,106,107,110,111,112,113,114,115,129,153,],[-78,-79,-92,-79,90,-99,-89,-90,-91,90,-98,90,-100,90,90,90,90,90,90,-101,-79,]),')':([19,31,32,57,60,61,62,64,65,66,67,75,80,91,100,102,103,106,107,110,111,112,113,114,115,116,129,138,145,153,154,],[-78,59,-79,-92,83,-79,-102,-99,-89,-90,-91,101,107,-98,-35,-79,126,129,-100,-103,-93,-94,-95,-96,-97,130,-101,152,-36,-79,162,]),'MATCHES':([19,29,34,70,71,77,104,105,],[-78,-83,-84,94,-79,-82,-80,-81,]),'{':([19,32,72,73,74,118,124,125,143,144,],[-78,-79,-33,99,-79,-34,99,-79,99,-79,]),'INT':([31,55,58,63,79,85,86,87,88,89,90,94,138,],[65,76,65,65,65,65,65,65,65,65,65,116,65,]),'PI':([31,58,63,79,85,86,87,88,89,90,138,],[67,67,67,67,67,67,67,67,67,67,67,]),']':([76,],[104,]),'}':([99,119,120,121,134,135,140,149,150,153,155,156,161,163,164,165,167,168,169,],[-49,132,-49,-54,147,-55,-68,-56,-57,-61,-66,-67,-60,-65,-58,-59,-64,-62,-63,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'main':([0,],[1,]),'program':([0,],[2,]),'statement':([0,2,],[3,20,]),'qop':([0,2,130,],[7,7,146,]),'qif':([0,2,],[8,8,]),'id':([0,2,9,10,13,14,15,17,18,31,45,54,56,58,59,63,68,75,79,83,85,86,87,88,89,90,98,99,101,120,122,123,126,128,130,138,151,152,162,],[10,10,27,29,29,29,29,49,49,57,29,72,29,57,29,57,29,100,57,29,57,57,57,57,57,57,118,122,72,122,136,136,72,145,10,57,159,136,136,]),'qdecl':([0,2,],[11,11,]),'cdecl':([0,2,],[12,12,]),'primary_list':([10,14,59,83,],[30,41,81,108,]),'primary':([10,13,14,15,45,56,59,68,83,],[33,39,33,43,70,78,33,92,33,]),'indexed_id':([10,13,14,15,17,18,45,56,59,68,83,],[34,34,34,34,47,50,34,34,34,34,34,]),'gate_scope':([27,99,120,],[54,119,134,]),'expression_list':([31,138,],[60,154,]),'expression':([31,58,63,79,85,86,87,88,89,90,138,],[62,80,91,106,110,111,112,113,114,115,62,]),'unary':([31,58,63,79,85,86,87,88,89,90,138,],[64,64,64,64,64,64,64,64,64,64,64,]),'qarg_list':([54,101,126,],[73,124,143,]),'gate_body':([73,124,143,],[96,141,157,]),'carg_list':([75,],[103,]),'gop_list':([99,],[120,]),'gop':([99,120,],[121,135,]),'id_list':([122,123,152,162,],[137,139,160,166,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> main","S'",1,None,None,None),
  ('main -> program','main',1,'p_main','qfasm_parser.py',419),
  ('program -> statement','program',1,'p_program','qfasm_parser.py',428),
  ('program -> program statement','program',2,'p_program_list','qfasm_parser.py',435),
  ('statement -> OPENQASM FLOAT ;','statement',3,'p_statement_openqasm','qfasm_parser.py',448),
  ('statement -> OPENQASM FLOAT error','statement',3,'p_statement_openqasm','qfasm_parser.py',449),
  ('statement -> OPENQASM error','statement',2,'p_statement_openqasm','qfasm_parser.py',450),
  ('statement -> qop ;','statement',2,'p_statement_qop','qfasm_parser.py',463),
  ('statement -> qop error','statement',2,'p_statement_qop','qfasm_parser.py',464),
  ('statement -> qif ;','statement',2,'p_statement_qop','qfasm_parser.py',465),
  ('statement -> qif error','statement',2,'p_statement_qop','qfasm_parser.py',466),
  ('statement -> ;','statement',1,'p_statement_empty','qfasm_parser.py',474),
  ('qif -> IF ( primary MATCHES INT ) qop','qif',7,'p_statement_qif','qfasm_parser.py',480),
  ('qif -> IF ( primary MATCHES INT error','qif',6,'p_statement_qif','qfasm_parser.py',481),
  ('qif -> IF ( primary MATCHES error','qif',5,'p_statement_qif','qfasm_parser.py',482),
  ('qif -> IF ( primary error','qif',4,'p_statement_qif','qfasm_parser.py',483),
  ('qif -> IF ( error','qif',3,'p_statement_qif','qfasm_parser.py',484),
  ('qif -> IF error','qif',2,'p_statement_qif','qfasm_parser.py',485),
  ('qop -> id primary_list','qop',2,'p_unitaryop','qfasm_parser.py',525),
  ('qop -> id ( ) primary_list','qop',4,'p_unitaryop','qfasm_parser.py',526),
  ('qop -> id ( expression_list ) primary_list','qop',5,'p_unitaryop','qfasm_parser.py',527),
  ('qop -> id ( ) error','qop',4,'p_unitaryop_error','qfasm_parser.py',544),
  ('qop -> id ( error','qop',3,'p_unitaryop_error','qfasm_parser.py',545),
  ('qop -> id ( expression_list ) error','qop',5,'p_unitaryop_error','qfasm_parser.py',546),
  ('qop -> id ( expression_list error','qop',4,'p_unitaryop_error','qfasm_parser.py',547),
  ('qop -> MEASURE primary ASSIGN primary','qop',4,'p_measure','qfasm_parser.py',556),
  ('qop -> MEASURE primary ASSIGN error','qop',4,'p_measure_error','qfasm_parser.py',565),
  ('qop -> MEASURE primary error','qop',3,'p_measure_error','qfasm_parser.py',566),
  ('qop -> MEASURE error','qop',2,'p_measure_error','qfasm_parser.py',567),
  ('qop -> BARRIER primary_list','qop',2,'p_barrier','qfasm_parser.py',579),
  ('qop -> BARRIER error','qop',2,'p_barrier_error','qfasm_parser.py',587),
  ('qop -> RESET primary','qop',2,'p_reset','qfasm_parser.py',594),
  ('qop -> RESET error','qop',2,'p_reset_error','qfasm_parser.py',602),
  ('qarg_list -> id','qarg_list',1,'p_gate_qarg_list_begin','qfasm_parser.py',609),
  ('qarg_list -> qarg_list , id','qarg_list',3,'p_gate_qarg_list_next','qfasm_parser.py',617),
  ('carg_list -> id','carg_list',1,'p_gate_carg_list_begin','qfasm_parser.py',627),
  ('carg_list -> carg_list , id','carg_list',3,'p_gate_carg_list_next','qfasm_parser.py',635),
  ('statement -> GATE id gate_scope qarg_list gate_body','statement',5,'p_statement_gatedecl_nolr','qfasm_parser.py',645),
  ('statement -> GATE error','statement',2,'p_statement_gatedecl_nolr','qfasm_parser.py',646),
  ('statement -> GATE id gate_scope error','statement',4,'p_statement_gatedecl_nolr','qfasm_parser.py',647),
  ('statement -> GATE id gate_scope qarg_list error','statement',5,'p_statement_gatedecl_nolr','qfasm_parser.py',648),
  ('statement -> GATE id gate_scope ( ) qarg_list gate_body','statement',7,'p_statement_gatedecl_noargs','qfasm_parser.py',662),
  ('statement -> GATE id gate_scope ( error','statement',5,'p_statement_gatedecl_noargs','qfasm_parser.py',663),
  ('statement -> GATE id gate_scope ( ) error','statement',6,'p_statement_gatedecl_noargs','qfasm_parser.py',664),
  ('statement -> GATE id gate_scope ( ) qarg_list error','statement',7,'p_statement_gatedecl_noargs','qfasm_parser.py',665),
  ('statement -> GATE id gate_scope ( carg_list ) qarg_list gate_body','statement',8,'p_statement_gatedecl_args','qfasm_parser.py',679),
  ('statement -> GATE id gate_scope ( carg_list ) qarg_list error','statement',8,'p_statement_gatedecl_args','qfasm_parser.py',680),
  ('statement -> GATE id gate_scope ( carg_list ) error','statement',7,'p_statement_gatedecl_args','qfasm_parser.py',681),
  ('statement -> GATE id gate_scope ( carg_list error','statement',6,'p_statement_gatedecl_args','qfasm_parser.py',682),
  ('gate_scope -> <empty>','gate_scope',0,'p_gate_scope','qfasm_parser.py',698),
  ('gate_body -> { gate_scope }','gate_body',3,'p_gate_body_emptybody','qfasm_parser.py',706),
  ('gate_body -> { gate_scope error','gate_body',3,'p_gate_body_emptybody','qfasm_parser.py',707),
  ('gate_body -> { gop_list gate_scope }','gate_body',4,'p_gate_body','qfasm_parser.py',715),
  ('gate_body -> { gop_list gate_scope error','gate_body',4,'p_gate_body','qfasm_parser.py',716),
  ('gop_list -> gop','gop_list',1,'p_gop_list_begin','qfasm_parser.py',724),
  ('gop_list -> gop_list gop','gop_list',2,'p_gop_list_next','qfasm_parser.py',730),
  ('gop -> id id_list ;','gop',3,'p_gop_nocargs','qfasm_parser.py',740),
  ('gop -> id id_list error','gop',3,'p_gop_nocargs','qfasm_parser.py',741),
  ('gop -> id ( ) id_list ;','gop',5,'p_gop_nocargs','qfasm_parser.py',742),
  ('gop -> id ( ) id_list error','gop',5,'p_gop_nocargs','qfasm_parser.py',743),
  ('gop -> id ( ) error','gop',4,'p_gop_nocargs','qfasm_parser.py',744),
  ('gop -> id ( error','gop',3,'p_gop_nocargs','qfasm_parser.py',745),
  ('gop -> id ( expression_list ) id_list ;','gop',6,'p_gop_cargs','qfasm_parser.py',762),
  ('gop -> id ( expression_list ) id_list error','gop',6,'p_gop_cargs','qfasm_parser.py',763),
  ('gop -> id ( expression_list ) error','gop',5,'p_gop_cargs','qfasm_parser.py',764),
  ('gop -> id ( expression_list error','gop',4,'p_gop_cargs','qfasm_parser.py',765),
  ('gop -> BARRIER id_list ;','gop',3,'p_gop_barrier','qfasm_parser.py',781),
  ('gop -> BARRIER id_list error','gop',3,'p_gop_barrier','qfasm_parser.py',782),
  ('gop -> BARRIER error','gop',2,'p_gop_barrier','qfasm_parser.py',783),
  ('statement -> qdecl ;','statement',2,'p_statement_bitdecl','qfasm_parser.py',796),
  ('statement -> cdecl ;','statement',2,'p_statement_bitdecl','qfasm_parser.py',797),
  ('statement -> qdecl error','statement',2,'p_statement_bitdecl','qfasm_parser.py',798),
  ('statement -> cdecl error','statement',2,'p_statement_bitdecl','qfasm_parser.py',799),
  ('statement -> error','statement',1,'p_statement_bitdecl','qfasm_parser.py',800),
  ('qdecl -> QREG indexed_id','qdecl',2,'p_qdecl','qfasm_parser.py',811),
  ('qdecl -> QREG error','qdecl',2,'p_qdecl','qfasm_parser.py',812),
  ('cdecl -> CREG indexed_id','cdecl',2,'p_cdecl','qfasm_parser.py',824),
  ('cdecl -> CREG error','cdecl',2,'p_cdecl','qfasm_parser.py',825),
  ('id -> ID','id',1,'p_id','qfasm_parser.py',838),
  ('id -> error','id',1,'p_id','qfasm_parser.py',839),
  ('indexed_id -> id [ INT ]','indexed_id',4,'p_indexed_id','qfasm_parser.py',850),
  ('indexed_id -> id [ INT error','indexed_id',4,'p_indexed_id','qfasm_parser.py',851),
  ('indexed_id -> id [ error','indexed_id',3,'p_indexed_id','qfasm_parser.py',852),
  ('primary -> id','primary',1,'p_primary','qfasm_parser.py',863),
  ('primary -> indexed_id','primary',1,'p_primary','qfasm_parser.py',864),
  ('primary_list -> primary','primary_list',1,'p_primary_list','qfasm_parser.py',872),
  ('primary_list -> primary_list , primary','primary_list',3,'p_primary_list','qfasm_parser.py',873),
  ('id_list -> id','id_list',1,'p_id_list_begin','qfasm_parser.py',885),
  ('id_list -> id_list , id','id_list',3,'p_id_list_next','qfasm_parser.py',891),
  ('unary -> INT','unary',1,'p_unary_int','qfasm_parser.py',900),
  ('unary -> FLOAT','unary',1,'p_unary_float','qfasm_parser.py',906),
  ('unary -> PI','unary',1,'p_unary_pi','qfasm_parser.py',912),
  ('unary -> id','unary',1,'p_unary_id','qfasm_parser.py',919),
  ('expression -> expression * expression','expression',3,'p_expr_binary','qfasm_parser.py',927),
  ('expression -> expression / expression','expression',3,'p_expr_binary','qfasm_parser.py',928),
  ('expression -> expression + expression','expression',3,'p_expr_binary','qfasm_parser.py',929),
  ('expression -> expression - expression','expression',3,'p_expr_binary','qfasm_parser.py',930),
  ('expression -> expression ^ expression','expression',3,'p_expr_binary','qfasm_parser.py',931),
  ('expression -> - expression','expression',2,'p_expr_uminus','qfasm_parser.py',952),
  ('expression -> unary','expression',1,'p_expr_unary','qfasm_parser.py',962),
  ('expression -> ( expression )','expression',3,'p_expr_pare','qfasm_parser.py',968),
  ('expression -> id ( expression )','expression',4,'p_expr_mathfunc','qfasm_parser.py',974),
  ('expression_list -> expression','expression_list',1,'p_exprlist_begin','qfasm_parser.py',986),
  ('expression_list -> expression_list , expression','expression_list',3,'p_exprlist_next','qfasm_parser.py',992),
  ('ignore -> STRING','ignore',1,'p_ignore','qfasm_parser.py',1002),
  ('empty -> <empty>','empty',0,'p_empty','qfasm_parser.py',1008),
]
